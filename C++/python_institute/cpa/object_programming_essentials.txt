Basic concept
    > class Name_of_class {} - class definition
    > Name_of_class new_object - object creation
    > class Name_of_subclass : Name_of_class - sub-class definition

Anatomy of class
    > access modifiers:
        - default access modifier - private
        - public - accessible to all users of the class
        - private - only within class
    > can place function definition either inside or outside the class (if outside
        it was declared inside)
    > if a function introduces an entity of the name identical to any of the
        class components, the name of the class component if overriden; It can
        only be accessed by the qualification with the home class name:
            Class::value = value;
    > this - keyword(may not be overriden, should not be declared explicitly),
        is a pointer to the current object; object component then can be
        accessed by one of two ways:
            (*p).component or
            p->component
    > return_type class_name::function_name(parameters){} - function body outside
        class, has the same access and overriding rule as inside class function
    > class functions may have default parameters and be overloaded as well
    > function with the name identical to its home class is a constructor;
        must not have any return type, may be overloaded; can not be directly
        invoked; cannot not be accessed explicitly like Class::Class or
        object.Class()
        - copying constructor - implicitly invoked when declaration is followed
            by an initiator(Class object = object1) or declaration specifies
            a constructor suitable for the declaration or when a particular 
            object is transferred to a function as a value-passed actual 
            parameter(Class object(object1)):
                Class(Class const &source) {}