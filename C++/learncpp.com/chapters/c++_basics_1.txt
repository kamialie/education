1.1 Statements and the structure of a program
    # Statements
        > kinds of statements in C++:
            - Declaration statements
            - Jump
            - Expression
            - Compound
            - Selection (conditional)
            - Iteration (loops)
            - Try blocks

1.2 Comments
    # Multiline comments
        > example:
            /* This is a multiline comment
             * with some text 1
             * with some text 2
             */
        > multiline comments can not be nested
    # Proper use of comments
        > at the library, program, or function level describe how
        > inside the library, program, or function level describe how
        > at the statement level describe why
        > show why one decision was made over the other

1.3 Intro to variables
    # Objects and variables
        > object is a region of storage (memory) that has a value and other
            properties
        > object can be named or anonymous - named object is called a variable

1.4 Variable assignment and initialization
    # Copy and direct initialization
        > C++ supports 3 ways to initialize a variable:
            - int width = 5; - copy initialization
            - int width(5); - direct initialization
            - int width{5}; - uniform(brace) initialization, good for disallowing
                "narrowing" conversions, for example int width{4.5} wil cause
                a compilation error because of type error (copy and direct would
                just drop fractional part)
                    int width{} - zero initialization
        > favor uniform initialization
        > use explicit zero initialization for direct usage:
            int x{0};
            std::cout << x;
        > use zero initialization if the value is later replaced:
            int x{};
            std::cin >> x;
    # Initializing multiple variables    
        > valid examples:
            int a = 5, b = 5;
            int c(5), d(5);
            int e{5}, f{5};

1.5 Intro to iostream: cout, cin, endl
        > #include <iostream>
        > all defined in std namespace 
    # std:endl vs '\n'
        > endl does 2 jobs - moves cursor to the next line and "flushes" the output
            (content displayed immidiately)
        > prefer \n over endl
    # std::cin
        > iostream library doesnt provide a way to accept keyboard input without
            user having to press enter
        > pdcurses library may be used instead

1.6 Uninitialized variables and undefined behavior
    # Uninitialized variables
        > lack of initialization was inherited from C for optimization purposes
        > variable that has been assigned later on is no longer considered
            uninitialized, even never been initialized

1.7 Keywords and naming identfiers
    # Keywords
        > C++11 adds two special identifiers: 'override' and 'final', they have
            special meaning when used in certain constant, but are not reserved
    # Identifier naming best practices
        > alsways start with a lower case, unless for structs, classes, and
            enumerators
        > either use cameCase or seperated_by_underscore style
        > starting with underscore is typically reserved for OS, library, and/or
            compiler

1.10 Developing your first program
    