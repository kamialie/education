dictionary has no order, instead key-value pair
    > property bag in C#/.NET
    > index can be (almost) any type
    > example = dict() - create a new dictionary
    > example['one'] = 'uno' - adding new element
    > len function returns numbe of key-valeu pairs
    > 'in' operator checks if arguments appears as a key in dictionary
    > values method returns a list of values in a dictionary - can then check
        if argument appeared as a value, by checking resulting list
    > sidenote - 'in' works linearly in lists (bigger the list, longer it takes)
        https://wikipedia.org/wiki/Hash_table

dictionary as a set of counters
    > get method takes a key and a default value - if the key appears in the
        dictionary, returns corresponding value, otherwise the default value
        f.e.
            dictionary.get('smth', 0)

dictionaries and files
    > 

looping and dictionaries
    > for loop traverser keys of the dictionary, f.e.
        for key in dictionary;
            print(key, dictionary[key])
    > key method returns a list of keys, f.e.
        lst = dictionary.keys() or
            lst = list(dictionary)
    > items method return key-value pairs
        dictionary.items()
        for aaa, bbb in dictionary.items():
            print(aaa, bbb)

advanced text parsing
    > string methods:
        - lower
        - punctuation
        - translate - replace the characters in [fromstr] with the character in
            the same position in [tostr] and delete all characters that are in
            [deletestr]. The [fromstr] and [tostr] can be empty strings and the
            [deletestr] parameter can be omitted.
            f.e.
                line = line.translate(line.maketrans('', '', string.punctuation))
                