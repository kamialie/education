Using object
    > dir() - lists all methods and capabilities of Python object
    > type()

First Python object
    > class declaration:
        class PartyAnimal:
            x = 0

            def party(self):
                self.x = self.x + 1
                print('So far', self.x)
    > object creation:
        an = PartyAnimal()
    > method call:
        an.party() or
        PartyAnimal.party(an)

Object lifecycle
    > constructor:
        def __init__(self):
            #set smth
    > destructor:
        def __del__(self):
            #clean smth
    > constructor first, then destructor

Inheritance
    > creating a child class:
        class ChildClass(ParentClass):
            #blabla
    > inherits everything; if class doesnt have constructor, inherits that
        as well
    > if class definition is overwritten, it doesnt affect already created objects
        and child classes

bonus video:
    smalltalk - object-oriented pattern (https://en.wikipedia.org/wiki/Smalltalk)